#  Makefile for GNU Emacs on the Microsoft W32 API.
#  Copyright (c) 2000-2001 Free Software Foundation, Inc.
#
#  Top level makefile for building GNU Emacs on Windows NT
#
#  This file is part of GNU Emacs.
#  
#  GNU Emacs is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#  
#  GNU Emacs is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with GNU Emacs; see the file COPYING.  If not, write to
#  the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
#  Boston, MA 02111-1307, USA.

ALL		= RunMW32 install_exe cmdproxy fiber

.PHONY: $(ALL)

TRES		= $(BLD)/meadow.res

install_exe:	$(BLD) $(BLD)/install.exe
$(BLD)/install.exe: $(BLD)/install.$(O)
		$(LINK) $(LINK_OUT)$@ \
		$(LINK_FLAGS) $(ALL_DEPS) $(BASE_LIBS) $(USER32)

fiber:		$(BLD) $(BLD)/fiber.exe
$(BLD)/fiber.exe: $(BLD)/fiber.$(O)
		$(LINK) $(LINK_OUT)$@ \
		$(LINK_FLAGS) $(ALL_DEPS) $(BASE_LIBS) $(USER32)

RunMW32:	$(BLD) $(BLD)/RunMW32.exe
$(BLD)/RunMW32.exe: $(BLD)/RunMW32.$(O) $(TRES)
		$(LINK) -mwindows $(LINK_OUT)$@ \
		$(LINK_FLAGS) $(ALL_DEPS) $(BASE_LIBS) $(USER32)

cmdproxy:	  $(BLD) $(BLD)/cmdproxy.exe
$(BLD)/cmdproxy.exe: $(BLD)/cmdproxy.$(O)
		  $(LINK) $(LINK_OUT)$@ \
		  $(LINK_FLAGS) $(ALL_DEPS) $(BASE_LIBS) $(USER32)

#
# The resource file.  NT 3.10 requires the use of cvtres; even though
# it is not necessary on later versions, it is still ok to use it.
#
$(TRES):	meadow.rc
		$(RC) $(RC_OUT)$(BLD)/meadow.res $(ALL_DEPS)

which-sh:
	@echo Using $(THE_SHELL) as shell.

#
# Build emacs
#
all:	which-sh $(BLD) $(ALL) all-other-dirs-$(MAKETYPE)

all-other-dirs-nmake:
	cd ..\lib-src
	$(MAKE) $(MFLAGS) all
	cd ..\src
	$(MAKE) $(MFLAGS) all
	cd ..\lisp
	$(MAKE) $(MFLAGS) all
	cd ..\leim
	$(MAKE) $(MFLAGS) all
	cd ..\nt

all-other-dirs-gmake:
	$(MAKE) $(MFLAGS) -C ../lib-src all
	$(MAKE) $(MFLAGS) -C ../src all
	$(MAKE) $(MFLAGS) -C ../lisp all
	$(MAKE) $(MFLAGS) -C ../leim all

recompile:	recompile-$(MAKETYPE)

recompile-nmake:
	cd ..\lisp
	$(MAKE) $(MFLAGS) recompile
	cd ..\nt

recompile-gmake:
	$(MAKE) $(MFLAGS) -C ../lisp recompile

bootstrap:	$(BLD) $(ALL) bootstrap-$(MAKETYPE)

bootstrap-nmake:
	cd ..\src
	$(MAKE) $(MFLAGS) bootstrap
	$(MAKE) $(MFLAGS) bootstrap-clean
	cd ..\lisp
	$(MAKE) $(MFLAGS) bootstrap
	cd ..\nt

bootstrap-gmake:
	$(MAKE) $(MFLAGS) -C ../src bootstrap
	$(MAKE) $(MFLAGS) -C ../src bootstrap-clean
	$(MAKE) $(MFLAGS) -C ../lisp bootstrap

bootstrap-clean: bootstrap-clean-$(MAKETYPE)

bootstrap-clean-nmake:
	cd ..\src
	$(MAKE) $(MFLAGS) bootstrap-clean
	cd ..\lisp
	$(MAKE) $(MFLAGS) bootstrap-clean

bootstrap-clean-gmake:
	$(MAKE) $(MFLAGS) -C ../src bootstrap-clean
	$(MAKE) $(MFLAGS) -C ../lisp bootstrap-clean

Meadow.bat: Meadow.bat.in
	echo @echo off > $@
	echo REM !!! Warning: This file automatically generated !!! >> $@
	echo set "emacs_dir=$(INSTALL_DIR_M_DOS)" >> $@
	echo set "EMACSLOADPATH=$(INSTALL_DIR_M_DOS)\site-lisp\;$(INSTALL_DIR_DOS)\site-lisp\;$(INSTALL_DIR_M_DOS)\lisp" >> $@
	cat $< >> $@

$(INSTALL_DIR):
	- mkdir -p "$(INSTALL_DIR)"

$(INSTALL_DIR_M):
	- mkdir -p "$(INSTALL_DIR_M)"

$(INSTALL_DIR_M)/bin: $(INSTALL_DIR_M)
	- mkdir -p "$(INSTALL_DIR_M)/bin"

#
# Build and install emacs in INSTALL_DIR_M
#
install: all $(INSTALL_DIR_M)/bin install-other-dirs-$(MAKETYPE) Meadow.bat
ifndef MEADOW
	- $(CP) $(BLD)/addpm.exe $(INSTALL_DIR_M)/bin
	- $(CP) $(BLD)/ddeclient.exe $(INSTALL_DIR_M)/bin
endif
	- $(CP) $(BLD)/cmdproxy.exe $(INSTALL_DIR_M)/bin
ifndef MEADOW
	- $(CP) $(BLD)/runemacs.exe $(INSTALL_DIR_M)/bin
	- $(CP) ../lib-src/fns-*.el $(INSTALL_DIR_M)/bin
	- "$(INSTALL_DIR_M)/bin/addpm" /q
endif
	- $(DEL) ../same-dir.tst
	- $(DEL) $(INSTALL_DIR_M)/same-dir.tst
	echo SameDirTest > "$(INSTALL_DIR_M)/same-dir.tst"
	- mkdir -p "$(INSTALL_DIR_M)/etc"
	- mkdir -p "$(INSTALL_DIR_M)/info"
#	- mkdir -p "$(INSTALL_DIR_M)/lock"
#	- mkdir -p "$(INSTALL_DIR_M)/data"
	- mkdir -p "$(INSTALL_DIR_M)/site-lisp"
	- mkdir -p "$(INSTALL_DIR_M)/etc/icons"
	$(IFNOTSAMEDIR) $(CP) ../site-lisp/subdirs.el $(INSTALL_DIR_M)/site-lisp $(ENDIF)
	$(IFNOTSAMEDIR) $(CP_DIR) "..\etc" "$(INSTALL_DIR_M_DOS)\etc" $(ENDIF)
	- $(CP_DIR) icons "$(INSTALL_DIR_M_DOS)\etc\icons"
	$(IFNOTSAMEDIR) $(CP_DIR) "..\info" "$(INSTALL_DIR_M_DOS)\info" $(ENDIF)
ifdef MEADOW
		- $(CP) README.Meadow $(INSTALL_DIR)
		- $(CP) INSTALL.Meadow $(INSTALL_DIR)
		- $(CP) README.Meadow.ja $(INSTALL_DIR)
		- $(CP) INSTALL.Meadow.ja $(INSTALL_DIR)
#		- $(CP) Meadow.plan $(INSTALL_DIR)
		- $(CP) dot.emacs.ja $(INSTALL_DIR)
		- $(CP) fiber.txt $(INSTALL_DIR_M)/bin
		- $(CP) Meadow.bat $(INSTALL_DIR_M)/bin
		- $(CP) dump.bat $(INSTALL_DIR_M)/bin
#		- $(CP) debug.bat $(INSTALL_DIR_M)/bin
#		- $(CP) ../lib-src/fns-*.el $(INSTALL_DIR_M)/bin
		- $(CP) $(BLD)/cmdproxy.exe $(INSTALL_DIR_M)/bin
		- $(CP) $(BLD)/RunMW32.exe $(INSTALL_DIR_M)/bin
		- $(CP) meadow.ico $(INSTALL_DIR_M)/bin
		- $(CP) $(BLD)/install.exe $(INSTALL_DIR_M)
		- $(CP) $(BLD)/fiber.exe $(INSTALL_DIR_M)/bin
		- mkdir -p $(INSTALL_DIR)/site-lisp
		- $(CP) ../site-lisp/subdirs.el $(INSTALL_DIR)/site-lisp

		- mkdir -p "$(INSTALL_DIR_M)/bitmap"
		$(IFNOTSAMEDIR) $(CP_DIR) bitmap "$(INSTALL_DIR_M_DOS)\bitmap" $(ENDIF)

endif
	- $(DEL) ../same-dir.tst
	- $(DEL) $(INSTALL_DIR_M)/same-dir.tst

install-other-dirs-nmake:
	cd ..\lib-src
	$(MAKE) $(MFLAGS) install
	cd ..\src
	$(MAKE) $(MFLAGS) install
	cd ..\lisp
	$(MAKE) $(MFLAGS) install
	cd ..\leim
	$(MAKE) $(MFLAGS) install
	cd ..\nt

install-other-dirs-gmake:
	$(MAKE) $(MFLAGS) -C ../lib-src install
	$(MAKE) $(MFLAGS) -C ../src install
	$(MAKE) $(MFLAGS) -C ../lisp install
	$(MAKE) $(MFLAGS) -C ../leim install

#
# Maintenance
# 
clean:	clean-other-dirs-$(MAKETYPE)
	- $(DEL) *~ $(COMPILER_TEMP_FILES)
	- $(DEL_TREE) $(OBJDIR)
	- $(DEL) ../etc/DOC ../etc/DOC-X
	- $(DEL) Meadow.bat
	- $(DEL) debug.bat

clean-other-dirs-nmake:
	cd ..\lib-src
	$(MAKE) $(MFLAGS) clean
	cd ..\src
	$(MAKE) $(MFLAGS) clean
	cd ..\lisp
	$(MAKE) $(MFLAGS) clean
	cd ..\leim
	$(MAKE) $(MFLAGS) clean
	cd ..\nt

clean-other-dirs-gmake:
	$(MAKE) $(MFLAGS) -C ../lib-src clean
	$(MAKE) $(MFLAGS) -C ../src clean
	$(MAKE) $(MFLAGS) -C ../lisp clean
	$(MAKE) $(MFLAGS) -C ../leim clean

cleanall-other-dirs-nmake:
	cd ..\lib-src
	$(MAKE) $(MFLAGS) cleanall
	cd ..\src
	$(MAKE) $(MFLAGS) cleanall
	cd ..\nt

cleanall-other-dirs-gmake:
	$(MAKE) $(MFLAGS) -C ../lib-src cleanall
	$(MAKE) $(MFLAGS) -C ../src cleanall

cleanall: clean cleanall-other-dirs-$(MAKETYPE)
	 - $(DEL_TREE) obj
	 - $(DEL_TREE) obj-spd
	 - $(DEL_TREE) oo
	 - $(DEL_TREE) oo-spd

realclean: cleanall
	- $(DEL_TREE) ../bin
#
# Documentation
#
SDOC=sdoc
DOCS = Meadow-Manual.html Meadow-Manual_ja.html

$(DOCS): Meadow-Manual.sdoc
	$(SDOC) -toc "-locale:ja,en" -masterLocale:en $?

doc: $(DOCS)
